{"version":3,"file":"static/js/931.ca9b4487.chunk.js","mappings":"8SA8FA,EAjFkB,WAAO,IAAD,IACtB,GAKIA,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OACbE,EAHF,EAGEA,aACAC,EAJF,EAIEA,MAEIC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,+BACE,SAAC,KAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,UACE,UAAC,KAAD,CACEC,GAAG,OACHC,MAAM,QACNC,SAAUX,GAXK,SAAAY,GACrBP,GAASQ,EAAAA,EAAAA,IAAUD,IACnBX,GACD,IAKK,WAKE,UAAC,IAAD,CAAWa,mBAAiB,EAA5B,mBAEE,SAAC,EAAAC,GAAD,QACEC,QAAQ,SACRC,KAAK,KACLC,KAAK,SACDrB,EAAS,QAAS,CACpBsB,SAAU,yBACVC,QAAS,CACPC,MAAO,8CACPC,QAAS,uCAKV,OAANxB,QAAM,IAANA,OAAA,EAAAA,EAAQyB,SACP,SAAC,IAAD,CAAMC,SAAS,OAAOC,MAAM,MAA5B,gBACG3B,QADH,IACGA,GADH,UACGA,EAAQyB,aADX,aACG,EAAeD,WAGpB,UAAC,IAAD,CAAWR,mBAAiB,EAA5B,sBAEE,SAAC,EAAAC,GAAD,QACEC,QAAQ,SACRC,KAAK,KACLC,KAAK,YACDrB,EAAS,WAAY,CACvBsB,SAAU,yBACVO,UAAW,CACTL,MAAO,EACPC,QAAS,+CAKV,OAANxB,QAAM,IAANA,OAAA,EAAAA,EAAQ6B,YACP,SAAC,IAAD,CAAMH,SAAS,OAAOC,MAAM,MAA5B,gBACG3B,QADH,IACGA,GADH,UACGA,EAAQ6B,gBADX,aACG,EAAkBL,UAGtBpB,IAAS,yDACV,SAAC,IAAD,CACEK,QAAQ,OACRqB,WAAW,OACXC,YAAY,OACZZ,KAAK,KACLa,YAAY,SACZd,QAAQ,QACRE,KAAK,SAPP,0BAeT,ECtFD,EAJc,WACZ,OAAO,SAAC,EAAD,GACR,C","sources":["components/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectError } from '../redux/auth/authSelectors';\r\nimport { logInUser } from '../redux/auth/authOperations';\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Text,\r\n  Button,\r\n} from '@chakra-ui/react';\r\n\r\nconst LoginFrom = () => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm();\r\n  const error = useSelector(selectError);\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleSubmit = data => {\r\n    dispatch(logInUser(data));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"center\">\r\n        <FormControl\r\n          as=\"form\"\r\n          width=\"400px\"\r\n          onSubmit={handleSubmit(onHandleSubmit)}\r\n        >\r\n          <FormLabel requiredIndicator>\r\n            Email\r\n            <Input\r\n              variant=\"filled\"\r\n              size=\"md\"\r\n              type=\"email\"\r\n              {...register('email', {\r\n                required: 'The field is required!',\r\n                pattern: {\r\n                  value: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                  message: 'Please enter correct email!',\r\n                },\r\n              })}\r\n            />\r\n          </FormLabel>\r\n          {errors?.email && (\r\n            <Text fontSize=\"15px\" color=\"red\">\r\n              {errors?.email?.message}\r\n            </Text>\r\n          )}\r\n          <FormLabel requiredIndicator>\r\n            Password\r\n            <Input\r\n              variant=\"filled\"\r\n              size=\"md\"\r\n              type=\"password\"\r\n              {...register('password', {\r\n                required: 'The field is required!',\r\n                minLength: {\r\n                  value: 8,\r\n                  message: 'At least 8 characters are required!',\r\n                },\r\n              })}\r\n            />\r\n          </FormLabel>\r\n          {errors?.password && (\r\n            <Text fontSize=\"15px\" color=\"red\">\r\n              {errors?.password?.message}\r\n            </Text>\r\n          )}\r\n          {error && <h1>Email or password is wrong!</h1>}\r\n          <Button\r\n            display=\"flex\"\r\n            marginLeft=\"auto\"\r\n            marginRight=\"auto\"\r\n            size=\"lg\"\r\n            colorScheme=\"purple\"\r\n            variant=\"solid\"\r\n            type=\"submit\"\r\n          >\r\n            Log In\r\n          </Button>\r\n        </FormControl>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginFrom;\r\n","import LoginFrom from '../components/LoginForm';\r\n\r\nconst Login = () => {\r\n  return <LoginFrom />;\r\n};\r\n\r\nexport default Login;\r\n"],"names":["useForm","register","errors","formState","handleSubmit","reset","error","useSelector","selectError","dispatch","useDispatch","display","justifyContent","as","width","onSubmit","data","logInUser","requiredIndicator","I","variant","size","type","required","pattern","value","message","email","fontSize","color","minLength","password","marginLeft","marginRight","colorScheme"],"sourceRoot":""}