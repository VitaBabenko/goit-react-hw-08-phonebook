{"version":3,"file":"static/js/975.38df9eda.chunk.js","mappings":"iVAuJA,EArIqB,WAAO,IAAD,MACzB,GAKIA,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OACbE,EAHF,EAGEA,aACAC,EAJF,EAIEA,MAEIC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,gCACGL,IAAcE,IACb,SAAC,IAAD,CACEI,QAAQ,OACRC,WAAW,OACXC,YAAY,OACZC,UAAU,OACVC,MAAM,SACNC,KAAK,KACLC,UAAU,MACVC,MAAM,QACNC,WAAW,cAGbd,IACA,SAAC,KAAD,CAAKM,QAAQ,OAAOS,eAAe,SAAnC,UACE,UAAC,KAAD,CACEC,GAAG,OACHC,MAAM,QACNC,SAAUvB,GAzBG,SAAAwB,GACrBf,GAASgB,EAAAA,EAAAA,IAAaD,IACtBvB,GACD,IAmBO,WAKE,UAAC,IAAD,CAAWyB,mBAAiB,EAA5B,sBAEE,SAAC,EAAAC,GAAD,QACEC,QAAQ,SACRZ,KAAK,KACLa,KAAK,QACDhC,EAAS,OAAQ,CACnBiC,SAAU,yBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,uCAEXC,QAAS,CACPF,MACE,yHACFC,QACE,uEAKH,OAANnC,QAAM,IAANA,OAAA,EAAAA,EAAQqC,QACP,SAAC,IAAD,CAAMC,SAAS,OAAOrB,MAAM,MAA5B,gBACGjB,QADH,IACGA,GADH,UACGA,EAAQqC,YADX,aACG,EAAcF,WAGnB,UAAC,IAAD,CAAWP,mBAAiB,EAA5B,mBAEE,SAAC,EAAAC,GAAD,QACEC,QAAQ,SACRZ,KAAK,KACLa,KAAK,SACDhC,EAAS,QAAS,CACpBiC,SAAU,yBACVI,QAAS,CACPF,MAAO,8CACPC,QAAS,uCAKV,OAANnC,QAAM,IAANA,OAAA,EAAAA,EAAQuC,SACP,SAAC,IAAD,CAAMD,SAAS,OAAOrB,MAAM,MAA5B,gBACGjB,QADH,IACGA,GADH,UACGA,EAAQuC,aADX,aACG,EAAeJ,WAGpB,UAAC,IAAD,CAAWP,mBAAiB,EAA5B,sBAEE,SAAC,EAAAC,GAAD,QACEC,QAAQ,SACRZ,KAAK,KACLa,KAAK,YACDhC,EAAS,WAAY,CACvBiC,SAAU,yBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,+CAKV,OAANnC,QAAM,IAANA,OAAA,EAAAA,EAAQwC,YACP,SAAC,IAAD,CAAMF,SAAS,OAAOrB,MAAM,MAA5B,gBACGjB,QADH,IACGA,GADH,UACGA,EAAQwC,gBADX,aACG,EAAkBL,UAGtB1B,IACC,SAAC,KAAD,CAAKQ,MAAM,MAAMwB,OAAO,OAAxB,0DAIU,IAAXrC,IACC,SAAC,KAAD,CAAKa,MAAM,QAAQwB,OAAO,OAA1B,wEAIF,SAAC,IAAD,CACE5B,QAAQ,OACRC,WAAW,OACXC,YAAY,OACZgB,KAAK,SACLb,KAAK,KACLwB,YAAY,SACZZ,QAAQ,QAPV,6BAgBX,EC/ID,EAJqB,WACnB,OAAO,SAAC,EAAD,GACR,C","sources":["components/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/auth/authOperations';\r\nimport {\r\n  selectLoading,\r\n  selectVerify,\r\n  selectError,\r\n} from '../redux/auth/authSelectors';\r\nimport {\r\n  Spinner,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Text,\r\n  Button,\r\n} from '@chakra-ui/react';\r\n\r\nconst RegisterForm = () => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm();\r\n  const verify = useSelector(selectVerify);\r\n  const isLoading = useSelector(selectLoading);\r\n  const error = useSelector(selectError);\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleSubmit = data => {\r\n    dispatch(registerUser(data));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && !error && (\r\n        <Spinner\r\n          display=\"flex\"\r\n          marginLeft=\"auto\"\r\n          marginRight=\"auto\"\r\n          marginTop=\"80px\"\r\n          color=\"tomato\"\r\n          size=\"xl\"\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n        />\r\n      )}\r\n      {!isLoading && (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <FormControl\r\n            as=\"form\"\r\n            width=\"400px\"\r\n            onSubmit={handleSubmit(onHandleSubmit)}\r\n          >\r\n            <FormLabel requiredIndicator>\r\n              Username\r\n              <Input\r\n                variant=\"filled\"\r\n                size=\"md\"\r\n                type=\"text\"\r\n                {...register('name', {\r\n                  required: 'The field is required!',\r\n                  minLength: {\r\n                    value: 2,\r\n                    message: 'At least 2 characters are required!',\r\n                  },\r\n                  pattern: {\r\n                    value:\r\n                      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\r\n                    message:\r\n                      'Name may contain only letters, apostrophe, dash and spaces!',\r\n                  },\r\n                })}\r\n              />\r\n            </FormLabel>\r\n            {errors?.name && (\r\n              <Text fontSize=\"15px\" color=\"red\">\r\n                {errors?.name?.message}\r\n              </Text>\r\n            )}\r\n            <FormLabel requiredIndicator>\r\n              Email\r\n              <Input\r\n                variant=\"filled\"\r\n                size=\"md\"\r\n                type=\"email\"\r\n                {...register('email', {\r\n                  required: 'The field is required!',\r\n                  pattern: {\r\n                    value: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                    message: 'Please enter correct email!',\r\n                  },\r\n                })}\r\n              />\r\n            </FormLabel>\r\n            {errors?.email && (\r\n              <Text fontSize=\"15px\" color=\"red\">\r\n                {errors?.email?.message}\r\n              </Text>\r\n            )}\r\n            <FormLabel requiredIndicator>\r\n              Password\r\n              <Input\r\n                variant=\"filled\"\r\n                size=\"md\"\r\n                type=\"password\"\r\n                {...register('password', {\r\n                  required: 'The field is required!',\r\n                  minLength: {\r\n                    value: 8,\r\n                    message: 'At least 8 characters are required!',\r\n                  },\r\n                })}\r\n              />\r\n            </FormLabel>\r\n            {errors?.password && (\r\n              <Text fontSize=\"15px\" color=\"red\">\r\n                {errors?.password?.message}\r\n              </Text>\r\n            )}\r\n            {error && (\r\n              <Box color=\"red\" height=\"50px\">\r\n                User with this email is already registered!\r\n              </Box>\r\n            )}\r\n            {verify === false && (\r\n              <Box color=\"green\" height=\"50px\">\r\n                Please, visit your email address and active your account!\r\n              </Box>\r\n            )}\r\n            <Button\r\n              display=\"flex\"\r\n              marginLeft=\"auto\"\r\n              marginRight=\"auto\"\r\n              type=\"submit\"\r\n              size=\"lg\"\r\n              colorScheme=\"purple\"\r\n              variant=\"solid\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </FormControl>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import RegisterForm from '../components/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n  return <RegisterForm />;\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["useForm","register","errors","formState","handleSubmit","reset","verify","useSelector","selectVerify","isLoading","selectLoading","error","selectError","dispatch","useDispatch","display","marginLeft","marginRight","marginTop","color","size","thickness","speed","emptyColor","justifyContent","as","width","onSubmit","data","registerUser","requiredIndicator","I","variant","type","required","minLength","value","message","pattern","name","fontSize","email","password","height","colorScheme"],"sourceRoot":""}