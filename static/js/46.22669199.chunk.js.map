{"version":3,"file":"static/js/46.22669199.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm.jsx","components/Filter.jsx","components/ContactListItem.jsx","components/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\r\n\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\n\r\nexport const selectError = state => state.contacts.error;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../redux/contacts/contactsOperations';\r\nimport { selectContacts } from '../redux/contacts/contactsSelectors';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Box,\r\n  Heading,\r\n  FormLabel,\r\n  FormControl,\r\n  Input,\r\n  FormErrorMessage,\r\n  Button,\r\n} from '@chakra-ui/react';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nconst ContactSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .required('Required')\r\n    .matches(\r\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\r\n      'Name may contain only letters, apostrophe, dash and spaces!'\r\n    ),\r\n  phone: Yup.string()\r\n    .required('Required')\r\n    .matches(\r\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\r\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +!'\r\n    ),\r\n});\r\n\r\nexport const ContactForm = () => {\r\n  const contacts = useSelector(selectContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFormSubmit = (values, actions) => {\r\n    contacts.filter(\r\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\r\n    ).length\r\n      ? toast.error(`${values.name} is already in contacts!`)\r\n      : dispatch(addContact(values));\r\n\r\n    console.log(contacts);\r\n\r\n    actions.resetForm();\r\n  };\r\n\r\n  const validateName = value => {\r\n    let error;\r\n    if (value === '') {\r\n      error = 'Required';\r\n    }\r\n    return error;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Heading\r\n        as=\"h2\"\r\n        fontSize=\"3xl\"\r\n        color=\"purple\"\r\n        align=\"center\"\r\n        marginBottom=\"15px\"\r\n      >\r\n        Phonebook\r\n      </Heading>\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          phone: '',\r\n        }}\r\n        validationSchema={ContactSchema}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <Box\r\n          width=\"400px\"\r\n          border=\"1px\"\r\n          borderRadius=\"10px\"\r\n          borderColor=\"purple\"\r\n          padding=\"18px\"\r\n          marginLeft=\"auto\"\r\n          marginRight=\"auto\"\r\n        >\r\n          <Form>\r\n            <Field name=\"name\" validate={validateName}>\r\n              {({ field, form }) => (\r\n                <FormControl isInvalid={form.errors.name && form.touched.name}>\r\n                  <FormLabel color=\"purple\">\r\n                    Name\r\n                    <Input\r\n                      {...field}\r\n                      variant=\"filled\"\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                  </FormLabel>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"phone\" validate={validateName}>\r\n              {({ field, form }) => (\r\n                <FormControl isInvalid={form.errors.name && form.touched.name}>\r\n                  <FormLabel color=\"purple\">\r\n                    Number\r\n                    <Input\r\n                      {...field}\r\n                      variant=\"filled\"\r\n                      name=\"phone\"\r\n                      type=\"tel\"\r\n                    />\r\n                    <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                  </FormLabel>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Button\r\n              display=\"flex\"\r\n              marginLeft=\"auto\"\r\n              marginRight=\"auto\"\r\n              type=\"submit\"\r\n              size=\"md\"\r\n              colorScheme=\"purple\"\r\n              variant=\"solid\"\r\n            >\r\n              Add contact\r\n            </Button>\r\n          </Form>\r\n        </Box>\r\n      </Formik>\r\n      <Toaster toastOptions={{ duration: 3000 }} />\r\n    </>\r\n  );\r\n};\r\n","import { FormLabel, Input } from '@chakra-ui/react';\r\n\r\nexport const Filter = ({ value, onChange }) => {\r\n  return (\r\n    <FormLabel\r\n      margin=\"0\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      gap=\"15px\"\r\n      color=\"tomato\"\r\n    >\r\n      Search contacts\r\n      <Input\r\n        color=\"tomato\"\r\n        borderRadius=\"10px\"\r\n        border=\"1px\"\r\n        width=\"200px\"\r\n        variant=\"outline\"\r\n        size=\"sm\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </FormLabel>\r\n  );\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../redux/contacts/contactsOperations';\r\nimport PropTypes from 'prop-types';\r\nimport { Text, Button } from '@chakra-ui/react';\r\n\r\nexport const ContactListItem = ({ contact: { _id, name, phone } }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"lg\">{name} :</Text>\r\n      <Text fontSize=\"lg\">{phone}</Text>\r\n      <Button\r\n        size=\"md\"\r\n        colorScheme=\"purple\"\r\n        variant=\"solid\"\r\n        type=\"button\"\r\n        onClick={() => dispatch(deleteContact(_id))}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    _id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { ContactListItem } from './ContactListItem';\r\nimport { ListItem, OrderedList } from '@chakra-ui/react';\r\n\r\nexport const ContactList = ({ contacts }) => {\r\n  return (\r\n    <>\r\n      <OrderedList\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        gap=\"15px\"\r\n        marginTop=\"30px\"\r\n        color=\"purple\"\r\n        width=\"400px\"\r\n        marginLeft=\"auto\"\r\n        marginRight=\"auto\"\r\n        padding=\"15px\"\r\n      >\r\n        {contacts.map(contact => {\r\n          return (\r\n            <ListItem\r\n              key={contact._id}\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              gap=\"45px\"\r\n            >\r\n              <ContactListItem contact={contact} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </OrderedList>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      _id: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ),\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\r\nimport { ContactForm } from '../components/ContactForm';\r\nimport { Spinner } from '@chakra-ui/react';\r\nimport { Filter } from '../components/Filter';\r\nimport { ContactList } from '../components/ContactList';\r\nimport {\r\n  selectContacts,\r\n  selectIsLoading,\r\n  selectError,\r\n} from '../redux/contacts/contactsSelectors';\r\nimport { Heading } from '@chakra-ui/react';\r\n\r\nconst ContactsPage = () => {\r\n  const [filter, setFilter] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectContacts);\r\n  console.log(contacts);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const changeFilter = evt => {\r\n    setFilter(evt.currentTarget.value);\r\n  };\r\n\r\n  const visibleFilter = (() => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  })();\r\n\r\n  return (\r\n    <>\r\n      <ContactForm />\r\n      {isLoading && !error && (\r\n        <Spinner\r\n          display=\"flex\"\r\n          marginLeft=\"auto\"\r\n          marginRight=\"auto\"\r\n          marginTop=\"80px\"\r\n          color=\"tomato\"\r\n          size=\"xl\"\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n        />\r\n      )}\r\n      {contacts.length > 0 && (\r\n        <>\r\n          <Heading\r\n            as=\"h2\"\r\n            fontSize=\"3xl\"\r\n            color=\"purple\"\r\n            align=\"center\"\r\n            marginTop=\"40px\"\r\n            marginBottom=\"35px\"\r\n          >\r\n            Contacts\r\n          </Heading>\r\n          <Filter value={filter} onChange={changeFilter} />\r\n          <ContactList contacts={visibleFilter} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","ContactSchema","Yup","shape","name","required","matches","phone","ContactForm","useSelector","dispatch","useDispatch","validateName","value","as","fontSize","color","align","marginBottom","initialValues","validationSchema","onSubmit","values","actions","filter","contact","toLowerCase","length","toast","addContact","console","log","resetForm","width","border","borderRadius","borderColor","padding","marginLeft","marginRight","validate","field","form","isInvalid","errors","touched","I","variant","type","display","size","colorScheme","toastOptions","duration","Filter","onChange","margin","justifyContent","gap","ContactListItem","_id","onClick","deleteContact","ContactList","flexDirection","marginTop","map","alignItems","useState","setFilter","useEffect","fetchContacts","visibleFilter","includes","thickness","speed","emptyColor","evt","currentTarget"],"sourceRoot":""}